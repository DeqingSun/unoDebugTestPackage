name: Pack Arduino Action

on: [pull_request, push]

jobs:
    packArduino:
        runs-on: ubuntu-latest

        steps:
        - uses: actions/checkout@v3

        - name: Set release tag name for storage
          id: tag
          run: |
            echo "Release tag name is arduinoPack"
            echo "tag=arduinoPack" >> $GITHUB_ENV
            echo "Store the github username"
            echo "username=${{ github.actor }}" >> $GITHUB_ENV
            echo "Store the github branch name"
            branch_name=$(echo "${{ github.ref }}" | awk -F'/' '{print $NF}')
            echo "branch=${branch_name}" >> $GITHUB_ENV

        - name: Get current date and commit hash
          id: vars
          run: |
            date=$(date +'%y.%-m.%-d')
            commit=$(git rev-parse --short HEAD)
            echo "Date: $date"
            echo "Commit: $commit"
            echo "date=$date" >> $GITHUB_ENV
            echo "commit=$commit" >> $GITHUB_ENV
            echo "tarbz2_name=unoDebugTestPackage_${date}_${commit}.tar.bz2" >> $GITHUB_ENV
            echo "tarbz2_basename=unoDebugTestPackage_${date}_${commit}" >> $GITHUB_ENV

        - name: Pack avr8debug excluding hidden files
          run: |
            echo "Packing the avr8debug excluding hidden files..."
            mkdir -p packedFiles
            tar -jcv -f ${{ env.tarbz2_name }} -C avr8debug .
        - name: Calculate SHA256 checksum
          id: checksum
          run: |
            echo "Calculating SHA256 checksum..."
            sha256sum ${{ env.tarbz2_name }} | awk '{print $1}' > checksum.txt
            echo "SHA256 Checksum: $(cat checksum.txt)"
            echo "checksum=$(cat checksum.txt)" >> $GITHUB_ENV
            echo "Size is $(stat -c%s ${{ env.tarbz2_name }}) bytes"


        - name: Upload asset, make sure you have a release tagged arduinoPack
          env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          run: |
            gh release upload ${{ env.tag }} ${{ env.tarbz2_name }} --clobber
            # gh release upload ${{ env.tag }} package_ch32v_index_${{ env.branch }}.json --clobber